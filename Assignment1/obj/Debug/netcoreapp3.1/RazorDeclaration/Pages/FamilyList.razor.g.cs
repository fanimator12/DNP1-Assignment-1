#pragma checksum "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\Pages\FamilyList.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cdcd84e4cb266e02eb6a647953c63e533a06b523"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Assignment1.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\_Imports.razor"
using Assignment1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\_Imports.razor"
using Assignment1.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\Pages\FamilyList.razor"
using Assignment1.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\Pages\FamilyList.razor"
using Assignment1.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Families")]
    public partial class FamilyList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 48 "C:\Users\torok\OneDrive\Documents\GitHub\DNP1-Assignment-1\Assignment1\Pages\FamilyList.razor"
       
    private IList<Family> familiesToShow;
    private IList<Family> allFamilies;

    private int? filterById;
    private bool? filterByIsCompleted;

    private void FilterByUserId(ChangeEventArgs changeEventArgs) {
        filterById = null;
        try {
            filterById = int.Parse(changeEventArgs.Value.ToString());
        } catch (Exception e) { }
        ExecuteFilter();
    }

    private void FilterByCompletedStatus(ChangeEventArgs args) {
        filterByIsCompleted = null;
        try {
            filterByIsCompleted = bool.Parse(args.Value.ToString());
        } catch (Exception e) { }
        ExecuteFilter();
    }

    private void ExecuteFilter() {
        familiesToShow = allFamilies.Where(t => 
            (filterById != null && t.UserId == filterById || filterById == null) //&&
           // (filterByIsCompleted != null && t.IsCompleted == filterByIsCompleted || filterByIsCompleted == null)
        ).ToList();
    }

    protected override async Task OnInitializedAsync() {
        allFamilies = FamilyService.GetFamilies();
        familiesToShow = allFamilies;
    }

    private void RemoveFamily(int familyId) {
        Family familyToRemove = familiesToShow.First(t => t.FamilyId == familyId);
        FamilyService.RemoveFamily(familyId);
        familiesToShow.Remove(familyToRemove);
    }

    private void CompletedChange(ChangeEventArgs evt, Family family) {
        //family.IsCompleted = (bool) evt.Value;
        FamilyService.Update(family);
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFamiliesService FamilyService { get; set; }
    }
}
#pragma warning restore 1591
